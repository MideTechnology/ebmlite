from datetime import datetime
from typing import ByteString, List, Optional

DEFAULT_FLOAT_SIZE: int = ...
LENGTH_PREFIXES: List[int] = ...
STRING_CHARACTERS: bytes = ...

def getLength(val: int) -> int: ...
def encodeSize(val: int, length: Optional[int] = ...) -> bytes: ...
def encodeId(eid: int, length: Optional[int] = ...) -> bytes: ...
def encodeUInt(val: int, length: Optional[int] = ...) -> bytes: ...
def encodeInt(val: int, length: Optional[int] = ...) -> bytes: ...
def encodeFloat(val: float, length: Optional[int] = ...) -> bytes: ...
def encodeBinary(val: ByteString, length: Optional[int] = ...) -> bytes: ...
def encodeString(val: ByteString, length: Optional[int] = ...) -> bytes: ...
def encodeUnicode(val: str, length: Optional[int] = ...) -> bytes: ...
def encodeDate(val: datetime, length: Optional[int] = ...) -> bytes: ...
